<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Impersonator</name>
    </assembly>
    <members>
        <member name="T:Impersonator.Impersonator">
            <summary>
            Impersonation of a user. Allows to execute code under another
            user context.
            Please note that the account that instantiates the Impersonator class
            needs to have the 'Act as part of operating system' privilege set.
            </summary>
            <remarks> 
            This class is based on the information in the Microsoft knowledge base
            article http://support.microsoft.com/default.aspx?scid=kb;en-us;Q306158
            
            Encapsulate an instance into a using-directive like e.g.:
            
            ...
            using ( new Impersonator( "myUsername", "myDomainname", "myPassword" ) )
            {
            ...
            [code that executes under the new context]
            ...
            }
            ...
            
            Please contact the author Uwe Keim (mailto:uwe.keim@zeta-software.de)
            for questions regarding this class.
            </remarks>
        </member>
        <member name="M:Impersonator.Impersonator.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor. Starts the impersonation with the given credentials.
            Please note that the account that instantiates the Impersonator class
            needs to have the 'Act as part of operating system' privilege set.
            </summary>
            <param name="userName">The name of the user to act as.</param>
            <param name="domainName">網域名，若不在網域中則用IP.</param>
            <param name="password">The password of the user to act as.</param>
        </member>
        <member name="M:Impersonator.Impersonator.ImpersonateValidUser(System.String,System.String,System.String)">
            <summary>
            Does the actual impersonation.
            </summary>
            <param name="userName">The name of the user to act as.</param>
            <param name="domain">The domain name of the user to act as.</param>
            <param name="password">The password of the user to act as.</param>
        </member>
        <member name="M:Impersonator.Impersonator.UndoImpersonation">
            <summary>
            Reverts the impersonation.
            </summary>
        </member>
    </members>
</doc>
